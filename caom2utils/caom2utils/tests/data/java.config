DerivedObservation.members = members

Observation.type = obs.type
Observation.intent = obs.intent
Observation.sequenceNumber = obs.sequenceNumber
Observation.metaRelease = obs.metaRelease

Observation.algorithm.name = algorithm.name

Observation.instrument.name = instrument.name
Observation.instrument.keywords = instrument.keywords

Observation.proposal.id = proposal.id
Observation.proposal.pi = proposal.pi
Observation.proposal.project = proposal.project
Observation.proposal.title = proposal.title
Observation.proposal.keywords = proposal.keywords

Observation.target.name = target.name
Observation.target.type = target.type
Observation.target.standard = target.standard
Observation.target.redshift = target.redshift
Observation.target.keywords = target.keywords

Observation.telescope.name = telescope.name
Observation.telescope.geoLocationX = telescope.geoLocationX
Observation.telescope.geoLocationY = telescope.geoLocationY
Observation.telescope.geoLocationZ = telescope.geoLocationZ
Observation.telescope.keywords = telescope.keywords

Observation.environment.seeing = environment.seeing
Observation.environment.humidity = environment.humidity
Observation.environment.elevation = environment.elevation
Observation.environment.tau = environment.tau
Observation.environment.wavelengthTau = environment.wavelengthTau
Observation.environment.ambientTemp = environment.ambientTemp
Observation.environment.photometric = environment.photometric

Plane.metaRelease = plane.metaRelease
Plane.dataRelease = plane.dataRelease
Plane.dataProductType = plane.dataProductType
Plane.calibrationLevel = plane.calibrationLevel

Plane.provenance.name = provenance.name
Plane.provenance.version = provenance.version
Plane.provenance.project = provenance.project
Plane.provenance.producer = provenance.producer
Plane.provenance.runID = provenance.runID
Plane.provenance.reference = provenance.reference
Plane.provenance.lastExecuted = provenance.lastExecuted
Plane.provenance.keywords = provenance.keywords
Plane.provenance.inputs = provenance.inputs

Plane.metrics.sourceNumberDensity = metrics.sourceNumberDensity
Plane.metrics.background = metrics.background
Plane.metrics.backgroundStddev = metrics.backgroundStddev
Plane.metrics.fluxDensityLimit = metrics.fluxDensityLimit
Plane.metrics.magLimit = metrics.magLimit

Artifact.productType = artifact.productType
Artifact.releaseType = artifact.releaseType
Artifact.contentChecksum = artifact.contentChecksum

Part.name = part.name
Part.productType = part.productType

Chunk.naxis = ZNAXIS,NAXIS
Chunk.observableAxis = chunk.observableAxis
Chunk.positionAxis1 = getPositionAxis()
Chunk.positionAxis2 = getPositionAxis()
Chunk.energyAxis = getEnergyAxis()
Chunk.timeAxis = getTimeAxis()
Chunk.polarizationAxis = getPolarizationAxis()

Chunk.observable.dependent.bin = observable.dependent.bin
Chunk.observable.dependent.axis.ctype = observable.dependent.ctype
Chunk.observable.dependent.axis.cunit = observable.dependent.cunit
Chunk.observable.independent.bin = observable.independent.bin
Chunk.observable.independent.axis.ctype = observable.independent.ctype
Chunk.observable.independent.axis.cunit = observable.independent.cunit

Chunk.position.coordsys = RADESYS
Chunk.position.equinox = EQUINOX,EPOCH
Chunk.position.resolution = position.resolution
Chunk.position.axis.axis1.ctype = CTYPE{positionAxis1}
Chunk.position.axis.axis1.cunit = CUNIT{positionAxis1}
Chunk.position.axis.axis2.ctype = CTYPE{positionAxis2}
Chunk.position.axis.axis2.cunit = CUNIT{positionAxis2}
Chunk.position.axis.error1.syser = CSYER{positionAxis1}
Chunk.position.axis.error1.rnder = CRDER{positionAxis1}
Chunk.position.axis.error2.syser = CSYER{positionAxis2}
Chunk.position.axis.error2.rnder = CRDER{positionAxis2}
Chunk.position.axis.function.cd11 = CD{positionAxis1}_{positionAxis1}
Chunk.position.axis.function.cd12 = CD{positionAxis1}_{positionAxis2}
Chunk.position.axis.function.cd21 = CD{positionAxis2}_{positionAxis1}
Chunk.position.axis.function.cd22 = CD{positionAxis2}_{positionAxis2}
Chunk.position.axis.function.dimension.naxis1 = ZNAXIS{positionAxis1},NAXIS{positionAxis1}
Chunk.position.axis.function.dimension.naxis2 = ZNAXIS{positionAxis2},NAXIS{positionAxis2}
Chunk.position.axis.function.refCoord.coord1.pix = CRPIX{positionAxis1}
Chunk.position.axis.function.refCoord.coord1.val = CRVAL{positionAxis1}
Chunk.position.axis.function.refCoord.coord2.pix = CRPIX{positionAxis2}
Chunk.position.axis.function.refCoord.coord2.val = CRVAL{positionAxis2}
Chunk.position.axis.range.start.coord1.pix = position.range.start.coord1.pix
Chunk.position.axis.range.start.coord1.val = position.range.start.coord1.val
Chunk.position.axis.range.start.coord2.pix = position.range.start.coord2.pix
Chunk.position.axis.range.start.coord2.val = position.range.start.coord2.val
Chunk.position.axis.range.end.coord1.pix = position.range.end.coord1.pix
Chunk.position.axis.range.end.coord1.val = position.range.end.coord1.val
Chunk.position.axis.range.end.coord2.pix = position.range.end.coord2.pix
Chunk.position.axis.range.end.coord2.val = position.range.end.coord2.val

Chunk.energy.specsys = SPECSYS
Chunk.energy.ssysobs = SSYSOBS
Chunk.energy.restfrq = RESTFRQ
Chunk.energy.restwav = RESTWAV
Chunk.energy.velosys = VELOSYS
Chunk.energy.zsource = ZSOURCE
Chunk.energy.ssyssrc = SSYSSRC
Chunk.energy.velang = VELANG
Chunk.energy.bandpassName = filtername
Chunk.energy.resolvingPower = resolvingPower
Chunk.energy.transition.species = energy.transition.species
Chunk.energy.transition.transition = energy.transition.transition
Chunk.energy.axis.axis.ctype = CTYPE{energyAxis}
Chunk.energy.axis.axis.cunit = CUNIT{energyAxis}
Chunk.energy.axis.bounds.samples = energy.samples
Chunk.energy.axis.error.syser = CSYER{energyAxis}
Chunk.energy.axis.error.rnder = CRDER{energyAxis}
Chunk.energy.axis.function.naxis = NAXIS{energyAxis}
Chunk.energy.axis.function.delta = CDELT{energyAxis}
Chunk.energy.axis.function.refCoord.pix = CRPIX{energyAxis}
Chunk.energy.axis.function.refCoord.val = CRVAL{energyAxis}
Chunk.energy.axis.range.start.pix = energy.range.start.pix
Chunk.energy.axis.range.start.val = energy.range.start.val
Chunk.energy.axis.range.end.pix = energy.range.end.pix
Chunk.energy.axis.range.end.val = energy.range.end.val

Chunk.polarization.axis.axis.ctype = CTYPE{polarizationAxis}
Chunk.polarization.axis.axis.cunit = CUNIT{polarizationAxis}
Chunk.polarization.axis.bounds.samples = polarization.samples
Chunk.polarization.axis.error.syser = polarization.error.syser
Chunk.polarization.axis.error.rnder = polarization.error.reder
Chunk.polarization.axis.function.naxis = NAXIS{polarizationAxis}
Chunk.polarization.axis.function.delta = CDELT{polarizationAxis}
Chunk.polarization.axis.function.refCoord.pix = CRPIX{polarizationAxis}
Chunk.polarization.axis.function.refCoord.val = CRVAL{polarizationAxis}
Chunk.polarization.axis.range.start.pix = polarization.range.start.pix
Chunk.polarization.axis.range.start.val = polarization.range.start.val
Chunk.polarization.axis.range.end.pix = polarization.range.end.pix
Chunk.polarization.axis.range.end.val = polarization.range.end.val

Chunk.time.exposure = time.exposure
Chunk.time.resolution = time.resolution
Chunk.time.timesys = TIMESYS
Chunk.time.trefpos = TREFPOS
Chunk.time.mjdref = MJDREF
Chunk.time.axis.axis.ctype = CTYPE{timeAxis}
Chunk.time.axis.axis.cunit = CUNIT{timeAxis}
Chunk.time.axis.bounds.samples = time.samples
Chunk.time.axis.error.syser = CSYER{timeAxis}
Chunk.time.axis.error.rnder = CRDER{timeAxis}
Chunk.time.axis.function.naxis = NAXIS{timeAxis}
Chunk.time.axis.function.delta = CDELT{timeAxis}
Chunk.time.axis.function.refCoord.pix = CRPIX{timeAxis}
Chunk.time.axis.function.refCoord.val = CRVAL{timeAxis}
Chunk.time.axis.range.start.pix = time.range.start.pix
Chunk.time.axis.range.start.val = time.range.start.val
Chunk.time.axis.range.end.pix = time.range.end.pix
Chunk.time.axis.range.end.val = time.range.end.val

